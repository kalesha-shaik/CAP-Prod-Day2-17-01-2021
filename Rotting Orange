from collections import deque
class Solution:
    def orangesRotting(self, grid: List[List[int]]) -> int:
        if not grid or len(grid[0])==0:
            return 0
        result = 0
        queue = deque()
        directions = [(-1,0),(1, 0),(0, -1),(0, 1)]
        for i in range(len(grid)):
            for j in range(len(grid[i])):
                if grid[i][j] == 2:
                    queue.append((i,j,0))
        while queue:
            x, y, time = queue.popleft()
            result = time
            for dx, dy in directions:
                if 0 <= x + dx < len(grid) and 0 <= y + dy < len(grid[x]) and grid[x + dx][y + dy] == 1:
                    queue.append((x + dx,y+dy,time+1))
                    grid[x + dx][y + dy] = 2
        for i in range(len(grid)):
            for j in range(len(grid[i])):
                if grid[i][j] == 1:
                    return -1
        return result
